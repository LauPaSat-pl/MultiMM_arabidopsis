####################
#   MultiMM Model   #
####################

# This is automatically generated config file.
# Generated at: 2025-04-11T11:51:54.813964

# Notes:
# Some fields require units. Units are represented as objects from mm.units module.
# Simple units are parsed directly. For example: 
# HR_R0_PARAM = 0.2 nanometer
# But more complex units does not have any more sophisticated parser written, and will fail.'
# In such cases the unit is fixed (and noted in comment), so please convert complex units manually if needed.
# <float> and <int> types does not require any unit. Quantity require unit.

# Default values does not mean valid value. In many places it's only a empty field that need to be filled.

[Main]; name of the platform. Available choices: Reference CPU CUDA OpenCL, type: str, default: CPU
PLATFORM = CUDA

; The number of CPU threads (in case you would like to specify them)., type: int, default: 
CPU_THREADS = 24

; device index for CUDA or OpenCL (count from 0), type: str, default: 
DEVICE = 

; Choose 'GENE' or 'REGION' for gene or TAD level, 'CHROM' for chromosome leve, and 'GW' for genome level. It will setup some parameters for you and print you helpful comments., type: str, default: 
MODELLING_LEVEL = gene

; Path to CIF file., type: str, default: 
INITIAL_STRUCTURE_PATH = 

; To build a new initial structure., type: bool, default: True
BUILD_INITIAL_STRUCTURE = True

; you can choose between: hilbert, circle, rw, confined_rw, knot, self_avoiding_rw, spiral, sphere., type: str, default: hilbert
INITIAL_STRUCTURE_TYPE = hilbert

; Default value: false. True in case that you would like to have an ensemble of structures instead of one. Better to disable it for large simulations that require long computational time. Moreover it is better to start random walk initial structure in case of true value., type: bool, default: False
GENERATE_ENSEMBLE = False

; Number of samples of structures that you would like to calculate., type: int, default: 
N_ENSEMBLE = 

; Probability of downsampling contacts (from 0 to 1)., type: float, default: 1.0
DOWNSAMPLING_PROB = 1.0

; Path to XML file with forcefield., type: str, default: /home/skorsak/Projects/mine/MultiMM/simulation/forcefields/ff.xml
FORCEFIELD_PATH = /home/skorsak/Projects/mine/MultiMM/simulation/forcefields/ff.xml

; Number of Simulation Beads., type: int, default: 50000
N_BEADS = 1000

; It should be a .bed file with subcompartments from Calder (or something in the same format)., type: str, default: 
COMPARTMENT_PATH = None

; A .bedpe file path with loops. It is required., type: str, default: 
LOOPS_PATH = /home/skorsak/Data/Nextflow_Project/s1.bedpe

; A .tsv with genes and their locations in the genome., type: str, default: /home/skorsak/Projects/mine/MultiMM/simulation/data/hg38_gtf_annotations.tsv
GENE_TSV = /home/skorsak/Projects/mine/MultiMM/simulation/data/hg38_gtf_annotations.tsv

; The name of the gene of interest., type: str, default: 
GENE_NAME = MMEL1

; The id of the gene of interest., type: str, default: 
GENE_ID = 

; The window around of the area around the gene of interest., type: int, default: 500000
GENE_WINDOW = 500000

; A .bw or .BigWig file path with atacseq data. It is not required., type: str, default: 
ATACSEQ_PATH = 

; Output folder name., type: str, default: results
OUT_PATH = /home/skorsak/Data/Nextflow_Project/model_test

; Starting region coordinate., type: int, default: 
LOC_START = 

; Ending region coordinate., type: int, default: 
LOC_END = 

; Chromosome that corresponds the the modelling region of interest (in case that you do not want to model the whole genome)., type: str, default: 
CHROM = 

; Shuffle the chromosomes., type: bool, default: False
SHUFFLE_CHROMS = False

; Shuffling random seed., type: int, default: 0
SHUFFLING_SEED = 0

; Save plots., type: bool, default: True
SAVE_PLOTS = True

; Use harmonic bond interaction., type: bool, default: True
POL_USE_HARMONIC_BOND = True

; harmonic bond distance equilibrium constant, type: float, default: 0.1
POL_HARMONIC_BOND_R0 = 0.1

; harmonic bond force constant (fixed unit: kJ/mol/nm^2), type: float, default: 300000.0
POL_HARMONIC_BOND_K = 300000.0

; Use harmonic angle interaction., type: bool, default: True
POL_USE_HARMONIC_ANGLE = True

; harmonic angle distance equilibrium constant, type: float, default: 3.141592653589793
POL_HARMONIC_ANGLE_R0 = 3.141592653589793

; harmonic angle force constant (fixed unit: kJ/mol/radian^2), type: float, default: 100.0
POL_HARMONIC_ANGLE_CONSTANT_K = 100.0

; Use harmonic bond interaction for long range loops., type: bool, default: True
LE_USE_HARMONIC_BOND = True

; For fixed distances between loops. False if you want to correlate with the hatmap strength., type: bool, default: False
LE_FIXED_DISTANCES = False

; harmonic bond distance equilibrium constant, type: float, default: 0.1
LE_HARMONIC_BOND_R0 = 0.1

; harmonic bond force constant (fixed unit: kJ/mol/nm^2), type: float, default: 30000.0
LE_HARMONIC_BOND_K = 30000.0

; Use excluded volume., type: bool, default: True
EV_USE_EXCLUDED_VOLUME = True

; Epsilon parameter., type: float, default: 100.0
EV_EPSILON = 100.0

; Add something small in denominator to make it not exploding all the time., type: float, default: 0.05
EV_R_SMALL = 0.05

; Power in the exponent of EV potential., type: float, default: 6.0
EV_POWER = 6.0

; Use Spherical container, type: bool, default: False
SC_USE_SPHERICAL_CONTAINER = False

; Spherical container radius,, type: float, default: 
SC_RADIUS1 = 

; Spherical container radius,, type: float, default: 
SC_RADIUS2 = 

; Spherical container scaling factor, type: float, default: 1000.0
SC_SCALE = 1000.0

; Use Chromosomal Blocks., type: bool, default: False
CHB_USE_CHROMOSOMAL_BLOCKS = False

; Block copolymer width parameter., type: float, default: 0.3
CHB_KC = 0.3

; Energy factor for block copolymer chromosomal model., type: float, default: 1e-5
CHB_DE = 1e-05

; Use Compartment Blocks., type: bool, default: False
COB_USE_COMPARTMENT_BLOCKS = False

; Block copolymer equilibrium distance for chromosomal blocks., type: float, default: 
COB_DISTANCE = 

; Energy strength for A compartment., type: float, default: 1.0
COB_EA = 1.0

; Energy strength for B compartment., type: float, default: 2.0
COB_EB = 2.0

; Use Subcompartment Blocks., type: bool, default: False
SCB_USE_SUBCOMPARTMENT_BLOCKS = False

; Block copolymer equilibrium distance for chromosomal blocks., type: float, default: 
SCB_DISTANCE = 

; Energy strength for A1 compartment., type: float, default: 1.0
SCB_EA1 = 1.0

; Energy strength for A2 compartment., type: float, default: 1.33
SCB_EA2 = 1.33

; Energy strength for B1 compartment., type: float, default: 1.66
SCB_EB1 = 1.66

; Energy strength for B2 compartment., type: float, default: 2.0
SCB_EB2 = 2.0

; Interactions of B compartment with lamina., type: bool, default: False
IBL_USE_B_LAMINA_INTERACTION = False

; Scaling factor for B comoartment interaction with lamina., type: float, default: 400.0
IBL_SCALE = 400.0

; Attraction of smaller chromosomes., type: bool, default: False
CF_USE_CENTRAL_FORCE = False

; Strength of Interaction, type: float, default: 100.0
CF_STRENGTH = 100.0

; Attraction of smaller chromosomes., type: bool, default: False
NUC_DO_INTERPOLATION = False

; Maximum amount of nucleosomes per single bead., type: int, default: 4
MAX_NUCS_PER_BEAD = 4

; The radius of the single nucleosome helix., type: float, default: 0.1
NUC_RADIUS = 0.1

; The number of points that consist a nucleosome helix., type: int, default: 20
POINTS_PER_NUC = 20

; Zig zag angle. , type: float, default: 0.6283185307179586
PHI_NORM = 0.6283185307179586

; Do you want to run MD simulation?, type: bool, default: False
SIM_RUN_MD = True

; Number of steps in MD simulation, type: int, default: 10000
SIM_N_STEPS = 10000

; Error tolerance for variable MD simulation, type: float, default: 0.01
SIM_ERROR_TOLERANCE = 0.01

; Alpha of AMD simulation., type: float, default: 100.0
SIM_AMD_ALPHA = 100.0

; E (energy) of AMD simulation., type: float, default: 1000.0
SIM_AMD_E = 1000.0

; It determines in t how many steps we save a structure., type: int, default: 100
SIM_SAMPLING_STEP = 50

; Alternative: langevin, verlet, type: str, default: langevin
SIM_INTEGRATOR_TYPE = langevin

; The step of integrator., type: Quantity, default: 1 femtosecond
SIM_INTEGRATOR_STEP = 1.0 femtosecond

; Friction coefficient (Used only with langevin integrator), type: float, default: 0.5
SIM_FRICTION_COEFF = 0.5

; Sets initial velocities based on Boltzmann distribution, type: bool, default: False
SIM_SET_INITIAL_VELOCITIES = False

; Simulation temperature, type: Quantity, default: 310 kelvin
SIM_TEMPERATURE = 310.0 kelvin

; Number of trajectory frames to save., type: int, default: 2000
TRJ_FRAMES = 100